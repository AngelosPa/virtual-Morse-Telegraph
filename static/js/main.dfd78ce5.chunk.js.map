{"version":3,"sources":["components/Result.js","App.js","index.js"],"names":["morsecode","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","1","2","3","4","5","6","7","8","9","0","_","$","Result","props","str","strone","userInput","toLowerCase","split","some","Object","entries","join","includes","map","element","App","useState","setUserInput","className","type","placeholder","value","onChange","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+JAAMA,EAAY,CAChBC,EAAG,KACHC,EAAG,OACHC,EAAG,OACHC,EAAG,MACHC,EAAG,IACHC,EAAG,OACHC,EAAG,MACHC,EAAG,OACHC,EAAG,KACHC,EAAG,OACHC,EAAG,MACHC,EAAG,OACHC,EAAG,KACHC,EAAG,KACHC,EAAG,MACHC,EAAG,OACHC,EAAG,OACHC,EAAG,MACHC,EAAG,MACHC,EAAG,IACHC,EAAG,MACHC,EAAG,OACHC,EAAG,MACHC,EAAG,OACHC,EAAG,OACHC,EAAG,OACH,IAAK,IAELC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QAMH,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,QACL,IAAK,QACL,IAAK,SACLC,EAAG,SACH,IAAK,SACLC,EAAG,UACH,IAAK,SACL,IAAK,UAuBQC,EAnBA,SAACC,GACd,IAAIC,EAAM,GACNC,EAASF,EAAMG,UAAUC,cAAcC,MAAM,IAejD,OALEJ,EARgBC,EAAOI,MAAK,SAAC9C,GAAD,OAC5B+C,OAAOC,QAAQhD,GAAWiD,KAAK,IAAIC,SAAS,aAOtC,gDAJAR,EAAOS,KAAI,SAACC,GAChB,OAAOpD,EAAUoD,MAQd,4BAAIX,KC/CEY,MA9Bf,WAEE,MAAkCC,mBAAS,IAA3C,mBAAOX,EAAP,KAAkBY,EAAlB,KAMA,OACE,sBAAKC,UAAU,iBAAf,UACE,2CACA,uBACEC,KAAK,OACLC,YAAY,oBAEZC,MAAOhB,EACPiB,SAbN,SAAsBvD,GAEpBkD,EAAalD,EAAEwD,OAAOF,UAcpB,gCACE,sDAIA,cAAC,EAAD,CAAQhB,UAAWA,WCxB3BmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.dfd78ce5.chunk.js","sourcesContent":["const morsecode = {\n  a: \"._\",\n  b: \"_...\",\n  c: \"_._.\",\n  d: \"_..\",\n  e: \".\",\n  f: \".._.\",\n  g: \"__.\",\n  h: \"....\",\n  i: \"..\",\n  j: \".___\",\n  k: \"_._\",\n  l: \"._..\",\n  m: \"__\",\n  n: \"_.\",\n  o: \"___\",\n  p: \".__.\",\n  q: \"__._\",\n  r: \"._.\",\n  s: \"...\",\n  t: \"_\",\n  u: \".._\",\n  v: \"..._\",\n  w: \".__\",\n  x: \"_.._\",\n  y: \"_.__\",\n  z: \"__..\",\n  \" \": \" \",\n\n  1: \".____\",\n  2: \"..___\",\n  3: \"...__\",\n  4: \"...._\",\n  5: \".....\",\n  6: \"_....\",\n  7: \"__...\",\n  8: \"___..\",\n  9: \"____.\",\n  0: \"_____\",\n  /*\n   * Note: Some operators prefer \"!\" as \"___.\" and others as \"_._.__\"\n   * ARRL message format has most punctuation spelled out, as many symbols'\n   * encodings conflict with procedural signals (e.g. \"=\" and \"BT\").\n   */\n  \".\": \"._._._\",\n  \",\": \"__..__\",\n  \"?\": \"..__..\",\n  \"'\": \".____.\",\n  \"/\": \"_.._.\",\n  \"(\": \"_.__.\",\n  \")\": \"_.__._\",\n  \"&\": \"._...\",\n  \":\": \"___...\",\n  \";\": \"_._._.\",\n  \"=\": \"_..._\",\n  \"+\": \"._._.\",\n  \"-\": \"_...._\",\n  _: \"..__._\",\n  '\"': \"._.._.\",\n  $: \"..._.._\",\n  \"!\": \"_._.__\",\n  \"@\": \".__._.\",\n};\n\n// expected result .. / .-.. --- ...- . / -.-- --- ..-\nconst Result = (props) => {\n  let str = \"\";\n  let strone = props.userInput.toLowerCase().split(\"\");\n\n  const corrector = strone.some((morsecode) =>\n    Object.entries(morsecode).join(\"\").includes(\"€\")\n  );\n  if (!corrector) {\n    str = strone.map((element) => {\n      return morsecode[element];\n    });\n  } else {\n    str = \"we live in 1890 there,  € are not exist \";\n  }\n\n  //console.log(str.join(\"\"));\n\n  return <p>{str}</p>;\n};\nexport default Result;\n","import React, { useState } from \"react\";\n\nimport \"./scss/Main.scss\";\nimport Result from \"./components/Result.js\";\n\nfunction App() {\n  //ksekianme to hook mas k stelnoume se string to use state mas\n  const [userInput, setUserInput] = useState(\"\");\n  function changeHandle(e) {\n    //WE GOT WHAT HE WRITES\n    setUserInput(e.target.value);\n  }\n\n  return (\n    <div className=\"body-container\">\n      <h1>Telegraph</h1>\n      <input\n        type=\"text\"\n        placeholder=\"send your message\"\n        // ananewnoume to value me oti grafei o user\n        value={userInput}\n        onChange={changeHandle}\n      ></input>\n\n      <div>\n        <p>your coded signal is:</p>\n        {\n          //stelnoume san parametro to userInput sto function mas k to pairnei ws props\n        }\n        <Result userInput={userInput} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}